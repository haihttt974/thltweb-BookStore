@model List<web_0799.Models.ApplicationUser>

@{
    ViewData["Title"] = "Quản lý người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">Quản lý người dùng</h2>
        @* <a asp-action="Create" asp-controller="Admin" class="btn btn-primary">
            <i class="bi bi-user-plus me-1"></i> Thêm người dùng
        </a> *@
    </div>

    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title"><i class="bi bi-people me-1"></i> Danh sách người dùng</h3>
                </div>
                <div class="card-body table-responsive p-0">
                    <table class="table table-hover table-striped text-center align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Email</th>
                                <th>Họ và tên</th>
                                <th>Địa chỉ</th>
                                <th>Số điện thoại</th>
                                <th>Tuổi</th>
                                <th>Vai trò</th>
                                <th>Hành động</th>
                                <th>Phân quyền</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                var currentRoleName = ViewBag.UserRoles.ContainsKey(user.Id) ? ViewBag.UserRoles[user.Id] : null;
                                <tr>
                                    <td>@user.Email</td>
                                    <td>@user.FullName</td>
                                    <td>@(string.IsNullOrEmpty(user.Address) ? "N/A" : user.Address)</td>
                                    <td>@(string.IsNullOrEmpty(user.PhoneNumber) ? "N/A" : user.PhoneNumber)</td>
                                    <td>@(!string.IsNullOrWhiteSpace(user.Age) ? user.Age : "N/A")</td>
                                    <td>
                                        <span class="badge bg-info" id="roleBadge_@user.Id">
                                            @(currentRoleName ?? "Không có")
                                        </span>
                                    </td>
                                    <td>
                                        <a asp-action="Details" asp-controller="Admin" asp-route-id="@user.Id" class="btn btn-info btn-sm">
                                            <i class="bi bi-eye"></i> Chi tiết
                                        </a>
                                    </td>
                                    <td>
                                        <select class="form-select form-select-sm" onchange="assignRole('@user.Id', this)">
                                            <option value="" @@(currentRoleName= =null ? "selected" : "" )>-- Choose Role --</option>
                                            @foreach (var role in ViewBag.Roles)
                                            {
                                                <option value="@role.Id" @@(currentRoleName == role.Name ? "selected" : "")>@role.Name</option>
                                            }
                                        </select>
                                    </td>
                                </tr>
                            }
                            @if (!Model.Any())
                            {
                                <tr>
                                    <td colspan="8" class="text-muted py-4">Không tìm thấy người dùng.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function assignRole(userId, selectElement) {
            const roleId = selectElement.value;
            const badge = document.getElementById(`roleBadge_${userId}`);
            const formData = new FormData();
            formData.append('id', userId);
            formData.append('roleId', roleId);
            formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

            fetch(`/Admin/Admin/AssignRole/${userId}`, {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Update the role badge
                        badge.textContent = roleId ? selectElement.options[selectElement.selectedIndex].text : 'Không có';
                        alert(data.message);
                    } else {
                        alert('Có lỗi xảy ra khi phân quyền.');
                        // Revert dropdown selection
                        selectElement.value = badge.dataset.originalValue || '';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Đã xảy ra lỗi khi phân quyền.');
                    selectElement.value = badge.dataset.originalValue || '';
                });

            // Store the original role for potential revert
            badge.dataset.originalValue = roleId;
        }
    </script>
}